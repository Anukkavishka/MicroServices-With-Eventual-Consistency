#stock-service-----------------------------------------
server.port:8082
# Enabling H2 Console
spring.h2.console.enabled=true
####################################################################################
#jpa properties
spring.jpa.database=MYSQL
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto =update

#datasource properties
spring.datasource.platform=mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/stocks_db?autoReconnect=true&useSSL=false
spring.datasource.username=root
spring.datasource.password=


####################################################################################
#default 
spring.cloud.stream.kafka.binder.autoCreateTopics=true
#spring.cloud.stream.kafka.binder.minPartitionCount=6
#spring.cloud.stream.kafka.binder.autoAddPartitions=true
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=com.simple.stockservice.serde.Deser
#in abive you have to provide a custom serializer for the Order event object

#validated order output stream by stock-service to order-service

spring.cloud.stream.bindings.ordersIn.destination=stkout
spring.cloud.stream.bindings.ordersIn.producer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.ordersIn.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordersIn.producer.value-serde=com.simple.stockservice.serde.Seri



#initial order info input stream from order-service to validate

spring.cloud.stream.bindings.ordersOut.destination=ordout
spring.cloud.stream.bindings.ordersOut.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.ordersOut.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.ordersOut.consumer.value-serde=com.simple.stockservice.serde.Deser

#order info with validated cmdstatus input stream from order-service to rollback the stock changes

spring.cloud.stream.bindings.rollbackInput.destination=orderrollback 
spring.cloud.stream.bindings.rollbackInput.consumer.header-mode=raw
spring.cloud.stream.kafka.streams.bindings.rollbackInput.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.rollbackInput.consumer.value-serde=com.simple.stockservice.serde.Deser

